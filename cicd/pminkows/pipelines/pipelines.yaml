apiVersion: redhatcop.redhat.io/v1alpha1
kind: Patch
metadata:
  name: patch-pipeline-service-account
  namespace: openshift-gitops
spec:
  patches:
    patchPipelineAccount:
      patchTemplate: |
        secrets:
          - name: quay-registry-secret
      patchType: application/strategic-merge-patch+json
      sourceObjectRefs:
        - apiVersion: v1
          name: openshift-gitops
          kind: Namespace
        - apiVersion: v1
          name: openshift-gitops-argocd-application-controller
          namespace: openshift-gitops
          kind: ServiceAccount
      targetObjectRef:
        apiVersion: v1
        name: pipeline
        namespace: pminkows-cicd
        kind: ServiceAccount
  serviceAccountRef:
    name: openshift-gitops-argocd-application-controller
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pipelines-scc-rolebinding
  namespace: pminkows-cicd
subjects:
  - kind: ServiceAccount
    name: pipeline
    namespace: pminkows-cicd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pipelines-scc-clusterrole
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: dotnet-pipeline-pvc
  namespace: pminkows-cicd
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  volumeMode: Filesystem
---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: sample-dotnet-pipeline
  namespace: pminkows-cicd
spec:
  params:
    - name: APP_VERSION
      description: Version number of application
      type: string
    - name: DOTNET_VERSION
      description: Version of .NET framework
      type: string
    - name: TESTS_DIR
      description: The name of the directory with unit tests
      type: string
  tasks:
    - name: git-clone
      params:
        - name: url
          value: 'https://github.com/piomin/s2i-dotnetcore-ex.git'
        - name: revision
          value: dotnet-5.0
        - name: submodules
          value: 'true'
        - name: depth
          value: '1'
        - name: sslVerify
          value: 'true'
        - name: deleteExisting
          value: 'true'
        - name: verbose
          value: 'true'
        - name: gitInitImage
          value: >-
            registry.redhat.io/openshift-pipelines/pipelines-git-init-rhel8@sha256:afc5d3f9efe26c7042635d43b8ffd09d67936e3d0b6b901dc08a33e20313d361
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: shared-workspace
    - name: s2i-dotnet
      params:
        - name: BUILDER_IMAGE
          value: >-
            registry.redhat.io/rhel8/buildah@sha256:6a68ece207bc5fd8db2dd5cc2d0b53136236fb5178eb5b71eebe5d07a3c33d13
        - name: VERSION
          value: $(params.DOTNET_VERSION)
        - name: PATH_CONTEXT
          value: .
        - name: TLSVERIFY
          value: 'false'
        - name: IMAGE
          value: >-
            quay.io/pminkows/sample-dotnetcore-ex:$(params.APP_VERSION)
      runAfter:
        - dotnet-test
      taskRef:
        kind: ClusterTask
        name: s2i-dotnet
      workspaces:
        - name: source
          workspace: shared-workspace
    - name: dotnet-test
      params:
        - name: DOTNET_IMAGE
          value: >-
            image-registry.openshift-image-registry.svc:5000/openshift/dotnet:$(params.DOTNET_VERSION)
        - name: TEST_DIR
          value: $(params.TESTS_DIR)
      runAfter:
        - git-clone
      taskRef:
        kind: Task
        name: dotnet-test
      workspaces:
        - name: source
          workspace: shared-workspace
  workspaces:
    - name: shared-workspace
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: maven-settings
  namespace: pminkows-cicd
data:
  settings.xml: >-
    <?xml version="1.0" encoding="UTF-8"?>
    <settings xmlns="http://maven.apache.org/SETTINGS/1.1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.1.0 http://maven.apache.org/xsd/settings-1.1.0.xsd">

    </settings>
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: kotlin-pipeline-pvc
  namespace: pminkows-cicd
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  volumeMode: Filesystem
---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: sample-kotlin-pipeline
  namespace: pminkows-cicd
spec:
  params:
    - description: branch
      name: git-revision
      type: string
      default: s2i
  tasks:
    - name: git-clone
      params:
        - name: url
          value: 'https://github.com/piomin/sample-spring-kotlin-microservice.git'
        - name: revision
          value: $(params.git-revision)
        - name: submodules
          value: 'true'
        - name: depth
          value: '1'
        - name: sslVerify
          value: 'false'
        - name: deleteExisting
          value: 'true'
        - name: verbose
          value: 'true'
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: source-dir
    - name: maven
      params:
        - name: GOALS
          value:
            - test
        - name: PROXY_PROTOCOL
          value: http
        - name: CONTEXT_DIR
          value: .
      runAfter:
        - git-clone
      taskRef:
        kind: ClusterTask
        name: maven
      when:
        - input: $(params.git-revision)
          operator: in
          values:
            - master
            - s2i
      workspaces:
        - name: source
          workspace: source-dir
        - name: maven-settings
          workspace: maven-settings
    - name: s2i-java-preview
      params:
        - name: PATH_CONTEXT
          value: .
        - name: TLSVERIFY
          value: 'false'
        - name: MAVEN_CLEAR_REPO
          value: 'false'
        - name: IMAGE
          value: >-
            quay.io/pminkows/sample-kotlin-spring:$(tasks.git-clone.results.commit)
      runAfter:
        - git-clone
      taskRef:
        kind: ClusterTask
        name: s2i-java
      when:
        - input: $(params.git-revision)
          operator: notin
          values:
            - master
            - s2i
      workspaces:
        - name: source
          workspace: source-dir
    - name: sonarqube
      params:
        - name: SONAR_HOST_URL
          value: 'https://sonarcloud.io'
        - name: SONAR_PROJECT_KEY
          value: sample-spring-kotlin
      runAfter:
        - maven
      taskRef:
        kind: Task
        name: sonarqube-scanner
      when:
        - input: $(params.git-revision)
          operator: in
          values:
            - master
            - s2i
      workspaces:
        - name: source-dir
          workspace: source-dir
        - name: sonar-settings
          workspace: sonar-settings
    - name: get-version
      params:
        - name: CONTEXT_DIR
          value: .
      runAfter:
        - sonarqube
      taskRef:
        kind: Task
        name: maven-get-project-version
      when:
        - input: $(params.git-revision)
          operator: in
          values:
            - master
            - s2i
      workspaces:
        - name: source
          workspace: source-dir
    - name: jira-issue
      params:
        - name: token-secret-name
          value: jira-token-secret
        - name: project-key
          value: SCRUM
        - name: username
          value: piotr.minkowski@gmail.com
        - name: url
          value: piotrminkowski.atlassian.net
        - name: title
          value: $(tasks.get-version.results.version)
      runAfter:
        - get-version
      taskRef:
        kind: Task
        name: send-to-jira
      when:
        - input: $(params.git-revision)
          operator: in
          values:
            - master
            - s2i
      workspaces:
        - name: source
          workspace: source-dir
    - name: s2i-java
      params:
        - name: PATH_CONTEXT
          value: .
        - name: TLSVERIFY
          value: 'false'
        - name: MAVEN_CLEAR_REPO
          value: 'false'
        - name: IMAGE
          value: >-
            quay.io/pminkows/sample-kotlin-spring:$(tasks.get-version.results.version)
      runAfter:
        - jira-issue
      taskRef:
        kind: ClusterTask
        name: s2i-java
      when:
        - input: $(params.git-revision)
          operator: in
          values:
            - master
            - s2i
      workspaces:
        - name: source
          workspace: source-dir
    - name: rhacs-image-scan
      params:
        - name: rox_central_endpoint
          value: rox-central-endpoint
        - name: rox_api_token
          value: rox-api-token
        - name: rox_image
          value: 'quay.io/stackrox-io/roxctl:3.71.0'
        - name: image
          value: quay.io/pminkows/sample-kotlin-spring:$(tasks.get-version.results.version)
        - name: output_format
          value: json
        - name: insecure-skip-tls-verify
          value: 'true'
      runAfter:
        - s2i-java
      taskRef:
        kind: Task
        name: rhacs-image-scan
      when:
        - input: $(params.git-revision)
          operator: in
          values:
            - master
            - s2i
      workspaces:
        - name: source
          workspace: source-dir
    - name: rhacs-image-check
      params:
        - name: rox_central_endpoint
          value: rox-central-endpoint
        - name: rox_api_token
          value: rox-api-token
        - name: rox_image
          value: 'quay.io/stackrox-io/roxctl:3.71.0'
        - name: image
          value: quay.io/pminkows/sample-kotlin-spring:$(tasks.get-version.results.version)
        - name: output_format
          value: table
        - name: insecure-skip-tls-verify
          value: 'true'
      runAfter:
        - jira-report
      taskRef:
        kind: Task
        name: rhacs-image-check
      when:
        - input: $(params.git-revision)
          operator: in
          values:
            - master
            - s2i
    - name: jira-report
      params:
        - name: token-secret-name
          value: jira-token-secret
        - name: username
          value: piotr.minkowski@gmail.com
        - name: url
          value: piotrminkowski.atlassian.net
        - name: file-name
          value: roxctl-stdout
        - name: issue-key
          value: $(tasks.jira-issue.results.issue-id)
      runAfter:
        - rhacs-image-scan
      taskRef:
        kind: Task
        name: add-jira-attachment
      when:
        - input: $(params.git-revision)
          operator: in
          values:
            - master
            - s2i
      workspaces:
        - name: source
          workspace: source-dir
  workspaces:
    - name: source-dir
    - name: maven-settings
    - name: sonar-settings
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: dotnet-multiproj-pipeline-pvc
  namespace: pminkows-cicd
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  volumeMode: Filesystem
---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: sample-dotnet-multiproj-pipeline
  namespace: pminkows-cicd
spec:
  params:
    - name: APP_VERSION
      description: Version number of application
      type: string
    - name: TESTS_DIR
      description: The name of the directory with unit tests
      type: string
    - name: APP_PROJECT
      description: The file with project .csproj
      type: string
  tasks:
    - name: git-clone
      params:
        - name: url
          value: 'https://github.com/piomin/web-api-example.git'
        - name: revision
          value: master
        - name: submodules
          value: 'true'
        - name: depth
          value: '1'
        - name: sslVerify
          value: 'true'
        - name: deleteExisting
          value: 'true'
        - name: verbose
          value: 'true'
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: shared-workspace
    - name: s2i-dotnet-multiproj
      params:
        - name: VERSION
          value: latest
        - name: APP_PROJECT
          value: $(params.APP_PROJECT)
        - name: PATH_CONTEXT
          value: .
        - name: TLSVERIFY
          value: 'false'
        - name: IMAGE
          value: quay.io/pminkows/web-api-2:$(params.APP_VERSION)
      runAfter:
        - dotnet-test
      taskRef:
        kind: ClusterTask
        name: s2i-dotnet-multiproj
      workspaces:
        - name: source
          workspace: shared-workspace
    - name: dotnet-test
      params:
        - name: DOTNET_IMAGE
          value: >-
            image-registry.openshift-image-registry.svc:5000/openshift/dotnet:latest
        - name: TEST_DIR
          value: $(params.TESTS_DIR)
      runAfter:
        - git-clone
      taskRef:
        kind: Task
        name: dotnet-test
      workspaces:
        - name: source
          workspace: shared-workspace
  workspaces:
    - name: shared-workspace
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: node-pipeline-pvc
  namespace: pminkows-cicd
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  volumeMode: Filesystem
---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: sample-react-pipeline
  namespace: pminkows-cicd
spec:
  params:
    - name: APP_VERSION
      description: Version number of application
      type: string
  tasks:
    - name: git-clone
      params:
        - name: url
          value: https://github.com/piomin/sample-react-microfrontend.git
        - name: revision
          value: ""
        - name: refspec
          value: ""
        - name: submodules
          value: "true"
        - name: depth
          value: "1"
        - name: sslVerify
          value: "false"
        - name: crtFileName
          value: ca-bundle.crt
        - name: subdirectory
          value: ""
        - name: sparseCheckoutDirectories
          value: ""
        - name: deleteExisting
          value: "true"
        - name: httpProxy
          value: ""
        - name: httpsProxy
          value: ""
        - name: noProxy
          value: ""
        - name: verbose
          value: "true"
        - name: gitInitImage
          value: registry.redhat.io/openshift-pipelines/pipelines-git-init-rhel8@sha256:6c3980b3d28c8fb92b17466f5654d5f484ab893f1673ec8f29e49c0d03f8aca9
        - name: userHome
          value: /tekton/home
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: source-dir
    - name: sonarqube-scanner
      params:
        - name: SONAR_HOST_URL
          value: https://sonarcloud.io
        - name: SONAR_PROJECT_KEY
          value: piomin_sample-node-react
      runAfter:
        - git-clone
      taskRef:
        kind: Task
        name: sonarqube-scanner
      workspaces:
        - name: source-dir
          workspace: source-dir
        - name: sonar-settings
          workspace: sonar-settings
    - name: s2i-nodejs
      params:
        - name: VERSION
          value: latest
        - name: PATH_CONTEXT
          value: .
        - name: TLSVERIFY
          value: "false"
        - name: IMAGE
          value: quay.io/pminkows/sample-node-react:$(params.APP_VERSION)
        - name: BUILDER_IMAGE
          value: registry.redhat.io/rhel8/buildah@sha256:ac0b8714cc260c94435cab46fe41b3de0ccbc3d93e38c395fa9d52ac49e521fe
        - name: SKIP_PUSH
          value: "false"
        - name: ENV_VARS
          value: []
      runAfter:
        - sonarqube-scanner
      taskRef:
        kind: ClusterTask
        name: s2i-nodejs
      workspaces:
        - name: source
          workspace: source-dir
    - name: rhacs-image-scan
      params:
        - name: rox_central_endpoint
          value: rox-central-endpoint
        - name: rox_api_token
          value: rox-api-token
        - name: rox_image
          value: 'quay.io/stackrox-io/roxctl:3.71.0'
        - name: image
          value: quay.io/pminkows/sample-node-react:$(params.APP_VERSION)
        - name: output_format
          value: json
        - name: insecure-skip-tls-verify
          value: 'true'
      runAfter:
        - s2i-nodejs
      taskRef:
        kind: Task
        name: rhacs-image-scan
      workspaces:
        - name: source
          workspace: source-dir
    - name: rhacs-image-check
      params:
        - name: rox_central_endpoint
          value: rox-central-endpoint
        - name: rox_api_token
          value: rox-api-token
        - name: rox_image
          value: 'quay.io/stackrox-io/roxctl:3.71.0'
        - name: image
          value: quay.io/pminkows/sample-node-react:$(params.APP_VERSION)
        - name: output_format
          value: table
        - name: insecure-skip-tls-verify
          value: 'true'
      runAfter:
        - rhacs-image-scan
      taskRef:
        kind: Task
        name: rhacs-image-check
  workspaces:
    - name: source-dir
    - name: sonar-settings
